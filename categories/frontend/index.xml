<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>FrontEnd on 펭귄의 외부 저장소</title><link>https://seungyeop-lee.github.io/blog/categories/frontend/</link><description>Recent content in FrontEnd on 펭귄의 외부 저장소</description><generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Tue, 22 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://seungyeop-lee.github.io/blog/categories/frontend/index.xml" rel="self" type="application/rss+xml"/><item><title>React Standard Architecture</title><link>https://seungyeop-lee.github.io/blog/post/react-standard-architecture/</link><pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate><guid>https://seungyeop-lee.github.io/blog/post/react-standard-architecture/</guid><description>&lt;p>Next.js에서 사용 가능한 React 범용 아키텍처를 고민 할 일이 생겨서 여기에 그 과정을 정리한다.&lt;/p>
&lt;h2 id="version1">version1&lt;/h2>
&lt;p>&lt;img src="https://seungyeop-lee.github.io/blog/blog/post/react-standard-architecture/front-archetecture-version1.png"
width="1422"
height="602"
srcset="https://seungyeop-lee.github.io/blog/blog/post/react-standard-architecture/front-archetecture-version1_hub9e6408302b398891b5046358d5509c6_50535_480x0_resize_box_3.png 480w, https://seungyeop-lee.github.io/blog/blog/post/react-standard-architecture/front-archetecture-version1_hub9e6408302b398891b5046358d5509c6_50535_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="front-archetecture-version1"
class="gallery-image"
data-flex-grow="236"
data-flex-basis="566px"
>&lt;/p>
&lt;h2 id="version2">version2&lt;/h2>
&lt;p>&lt;img src="https://seungyeop-lee.github.io/blog/blog/post/react-standard-architecture/front-archetecture-version2.png"
width="2282"
height="1440"
srcset="https://seungyeop-lee.github.io/blog/blog/post/react-standard-architecture/front-archetecture-version2_hu283887e9c5f03a10c66a37e72765c820_190333_480x0_resize_box_3.png 480w, https://seungyeop-lee.github.io/blog/blog/post/react-standard-architecture/front-archetecture-version2_hu283887e9c5f03a10c66a37e72765c820_190333_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="front-archetecture-version2"
class="gallery-image"
data-flex-grow="158"
data-flex-basis="380px"
>&lt;/p>
&lt;h2 id="version3">version3&lt;/h2>
&lt;p>&lt;img src="https://seungyeop-lee.github.io/blog/blog/post/react-standard-architecture/front-archetecture-version3.png"
width="2202"
height="1502"
srcset="https://seungyeop-lee.github.io/blog/blog/post/react-standard-architecture/front-archetecture-version3_hud4c65f90d2851e552a53d032a12553d3_244261_480x0_resize_box_3.png 480w, https://seungyeop-lee.github.io/blog/blog/post/react-standard-architecture/front-archetecture-version3_hud4c65f90d2851e552a53d032a12553d3_244261_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="front-archetecture-version3"
class="gallery-image"
data-flex-grow="146"
data-flex-basis="351px"
>&lt;/p>
&lt;h2 id="version4">version4&lt;/h2>
&lt;p>&lt;img src="https://seungyeop-lee.github.io/blog/blog/post/react-standard-architecture/front-archetecture-version4.png"
width="2202"
height="1622"
srcset="https://seungyeop-lee.github.io/blog/blog/post/react-standard-architecture/front-archetecture-version4_huf50315dfba439bdcf25d7af8964d3731_263525_480x0_resize_box_3.png 480w, https://seungyeop-lee.github.io/blog/blog/post/react-standard-architecture/front-archetecture-version4_huf50315dfba439bdcf25d7af8964d3731_263525_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="front-archetecture-version4"
class="gallery-image"
data-flex-grow="135"
data-flex-basis="325px"
>&lt;/p>
&lt;h2 id="version5">version5&lt;/h2>
&lt;p>&lt;img src="https://seungyeop-lee.github.io/blog/blog/post/react-standard-architecture/front-archetecture-version5.png"
width="2202"
height="1622"
srcset="https://seungyeop-lee.github.io/blog/blog/post/react-standard-architecture/front-archetecture-version5_hud4d4def15cc909a546a1bd6011fcc5ff_241774_480x0_resize_box_3.png 480w, https://seungyeop-lee.github.io/blog/blog/post/react-standard-architecture/front-archetecture-version5_hud4d4def15cc909a546a1bd6011fcc5ff_241774_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="front-archetecture-version5"
class="gallery-image"
data-flex-grow="135"
data-flex-basis="325px"
>&lt;/p></description></item><item><title>CSS Tips</title><link>https://seungyeop-lee.github.io/blog/post/css-tips/</link><pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate><guid>https://seungyeop-lee.github.io/blog/post/css-tips/</guid><description>&lt;img src="https://seungyeop-lee.github.io/blog/post/css-tips/cover.png" alt="Featured image of post CSS Tips" />&lt;h2 id="상속">상속&lt;/h2>
&lt;p>부모로부터 상속받은 속성은 브라우저의 디폴트 CSS 속성보다 우선순위가 낮다.&lt;/p>
&lt;h2 id="여백-상쇄">여백 상쇄&lt;/h2>
&lt;p>여백 상쇄(margin collapsing)로 인해 margin이 설정한 것과 다르게 보이는 경우가 있다. (&lt;a class="link" href="https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing" target="_blank" rel="noopener"
>참조&lt;/a>)&lt;/p>
&lt;ol>
&lt;li>둘 다 margin을 가진 인접 형제 요소&lt;/li>
&lt;li>첫째 및/또는 마지막 (혹은 유일한)의 자식 요소에 margin이 설정된 하나 또는 둘 이상의 자식 요소를 가진 부모 요소 (자식의 margin이 부모의 margin보다 클 경우 발생)&lt;/li>
&lt;/ol>
&lt;h2 id="줄바꿈-문자">줄바꿈 문자&lt;/h2>
&lt;p>줄바꿈 문자도 문자로 판단하여, 그만큼의 공간을 차지한다.&lt;/p>
&lt;h3 id="예시">예시&lt;/h3>
&lt;p>두 태그를 한 줄에 놓는 html 예제&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">style&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">box-sizing&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">border-box&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nc">main-div&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">inline-block&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nc">main-nav&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">inline-block&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">/* main-div 50px + 줄 바꿈 기호(공백) 5px */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">calc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">55&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">style&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;main-div&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 내용1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">nav&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;main-nav&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 내용2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">nav&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="2개-이상의-클래스">2개 이상의 클래스&lt;/h2>
&lt;p>2개 이상의 클래스가 1개의 태그에 설정 된 경우 클래스를 선택자로 하여 정의한 CSS 적용 룰&lt;/p>
&lt;ul>
&lt;li>태그에 선언된 클래스의 선언 순서는 영향을 미치지 않는다.&lt;/li>
&lt;li>태그에 선언된 클래스를 선택자로 한 CSS의 정의 순서만이 적용에 영향을 미친다.
&lt;ul>
&lt;li>나중에 정의된 CSS가 먼저 정의된 CSS를 덮어쓴다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="border-vs-outline">border vs. outline&lt;/h2>
&lt;p>border는 box model의 일부이며, outline은 box model에 속하지 않는다. outline은 border를 포함해서 요소를 완전히 둘러싼다. outline의 경우 해당 요소를 특별히 강조하기 위해 사용된다. (&lt;a class="link" href="https://cssdeck.com/blog/css-tips-outline-vs-border/" target="_blank" rel="noopener"
>참고&lt;/a>)&lt;/p>
&lt;h2 id="margin-auto">&lt;code>margin: auto&lt;/code>&lt;/h2>
&lt;p>&lt;code>margin: auto&lt;/code>로 할 경우, 해당 태그가 width나 height 기준으로 100%에 맞도록 자동으로 margin을 추가해준다.
일반적으로는 width를 % 단위로 줄이고, &lt;code>margin: auto&lt;/code>를 사용하여 중앙 정렬을 할 때 많이 사용된다.&lt;/p>
&lt;h2 id="동일-z-index">동일 z-index&lt;/h2>
&lt;p>&lt;code>position: fixed&lt;/code>인 2개 이상의 태그가 동일한 z-index를 가진경우에는 나중에 정의된 태그가 더 위에 위치한다.&lt;/p>
&lt;h2 id="stacking-context">stacking context&lt;/h2>
&lt;p>형제 태그에 대한 z-index 적용은 서로 독립적이어서, 자식 태그의 z-index는 부모 태그에게만 영향을 줄 수 있다. (&lt;a class="link" href="https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context" target="_blank" rel="noopener"
>참고&lt;/a>)&lt;/p>
&lt;h2 id="이미지와-컨테이너-사이에-공백이-생기는-문제-대응">이미지와 컨테이너 사이에 공백이 생기는 문제 대응&lt;/h2>
&lt;p>컨테이너가 둘려진 이미지가 인라인 요소라면 컨테이너에 공백이 생기는 버그가 있다. 해결하기 위한 방법은 아래와 같다.&lt;/p>
&lt;ol>
&lt;li>이미지에 &lt;code>vertial-align: top&lt;/code>을 설정&lt;/li>
&lt;li>이미지를 &lt;code>display: block&lt;/code>으로 변경&lt;/li>
&lt;/ol></description></item></channel></rss>